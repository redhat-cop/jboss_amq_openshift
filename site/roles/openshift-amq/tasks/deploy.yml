---
- name: Create OpenShift namespace
  k8s:
    name: "{{ openshift_namespace }}"
    api_version: v1
    kind: namespace
    state: present

- name: Create OpenShift service account
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ openshift_service_account }}"
        namespace: "{{ openshift_namespace }}"

- name: Add OpenShift view role to service account
  k8s:
    state: present
    definition:
      apiVersion: authorization.openshift.io/v1
      kind: RoleBinding
      groupNames: null
      metadata:
        name: view
        namespace: "{{ openshift_namespace }}"
      roleRef:
        name: view
      subjects:
        - kind: ServiceAccount
          name: "{{ openshift_service_account }}"
          namespace: "{{ openshift_namespace }}"
      userNames:
        - "system:serviceaccount:{{ openshift_namespace }}:{{ openshift_service_account }}"

- name: Generate OpenShift parameters needed for deployment
  template:
    src: openshift-process-parameters.j2
    dest: "{{ cert_dir.path }}/env"

- name: Deploy
  shell: >
    oc process openshift//amq63-ssl -o yaml --param-file={{ cert_dir.path }}/env | oc apply -f - -n {{ openshift_namespace }}

- name: Update deployment configuration to include service account
  k8s:
    state: present
    definition:
      apiVersion: apps.openshift.io/v1
      kind: DeploymentConfig
      metadata:
        name: broker-amq
        namespace: "{{ openshift_namespace }}"
        spec:
          template:
            metadata:
              name: broker-amq
              spec:
                serviceAccount: "{{ openshift_service_account }}"
                serviceAccountName: "{{ openshift_service_account }}"

- name: Encode key store
  slurp:
    src: "{{ cert_dir.path }}/{{ amq_keystore }}"
  register: encoded_amq_keystore

- name: Encode trust store
  slurp:
    src: "{{ cert_dir.path }}/{{ amq_truststore }}"
  register: encoded_amq_truststore

- name: Generate OpenShift secrets for key store and trust store
  k8s:
    state: present
    definition:
      apiVersion: v1
      data:
        amq-keystore.jks: "{{ encoded_amq_keystore.content }}"
        amq-truststore.jks: "{{ encoded_amq_truststore.content }}"
      kind: Secret
      metadata:
        name: amq-app-secret
        namespace: "{{ openshift_namespace }}"
        type: Opaque

- name: Add secrets to OpenShift service account
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ openshift_service_account }}"
        namespace: "{{ openshift_namespace }}"
      secrets:
        - name: amq-app-secret

- name: Expose secured STOMP route
  k8s:
    state: present
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        labels:
          application: broker
          template: amq63-ssl
          xpaas: 1.4.14
        name: stomp
        namespace: "{{ openshift_namespace }}"
      spec:
        host: amq-stomp.10.29.203.12.nip.io
        tls:
          termination: passthrough
        to:
          kind: Service
          name: broker-amq-stomp-ssl
          weight: 100
        wildcardPolicy: None

- name: Attach storage via persistent volume claim (PVC)
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: amq
        namespace: "{{ openshift_namespace }}"
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
