- name: Create temporary directory to hold generated certificates and keystore
  tempfile:
    state: directory
  register: cert_dir

- name: Generate certificate private key
  openssl_privatekey:
    path: "{{ cert_dir.path }}/key.pem"

- name: Generate certificate sign request
  openssl_csr:
    path: "{{ cert_dir.path }}/csr.pem"
    privatekey_path: "{{ cert_dir.path }}/key.pem"
    common_name: broker-amq
    country_name: US
    state_or_province_name: CA
    locality_name: San Diego
    organization_name: Sempra Energy
    organizational_unit_name: IT

- name: Generate certificate
  openssl_certificate:
    path: "{{ cert_dir.path }}/certificate.pem"
    privatekey_path: "{{ cert_dir.path }}/key.pem"
    csr_path: "{{ cert_dir.path }}/csr.pem"
    provider: selfsigned

- name: Generate PKCS#12 password
  set_fact:
    pkcs12_password: "{{ lookup('password', '/dev/null length=15') }}"
  when: pkcs12_password is not defined

- name: Generate key store password
  set_fact:
    keystore_password: "{{ lookup('password', '/dev/null length=15') }}"
  when: keystore_password is not defined

- name: Generate trust store password
  set_fact:
    truststore_password: "{{ lookup('password', '/dev/null length=15') }}"
  when: truststore_password is not defined

- name: Create PKCS#12
  openssl_pkcs12:
    action: export
    path: "{{ cert_dir.path }}/chain.p12"
    friendly_name: broker
    certificate_path: "{{ cert_dir.path }}/certificate.pem"
    privatekey_path: "{{ cert_dir.path }}/key.pem"
    passphrase: "{{ pkcs12_password }}"
    state: present

- name: Import PKCS#12 into key store
  java_cert:
    pkcs12_path: "{{ cert_dir.path }}/chain.p12"
    pkcs12_password: "{{ pkcs12_password }}"
    pkcs12_alias: broker
    cert_alias: broker
    keystore_path: "{{ cert_dir.path }}/{{ amq_keystore }}"
    keystore_pass: "{{ keystore_password }}"
    keystore_create: yes
    state: present

- name: Generate trust store
  java_cert:
    cert_path: "{{ cert_dir.path }}/certificate.pem"
    cert_alias: broker
    keystore_path: "{{ cert_dir.path }}/{{ amq_truststore }}"
    keystore_pass: "{{ truststore_password }}"
    keystore_create: yes
    state: present
